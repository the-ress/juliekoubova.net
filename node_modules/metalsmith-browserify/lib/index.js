var fs         = require('fs');
var path       = require('path');

var browserify = require('browserify');
var multimatch = require('multimatch');
var log        = require('npmlog');

module.exports = plugin;

log.heading = 'metalsmith-browserify';
log.headingStyle = {
  fg: 'cyan',
  bold: true
};

function plugin (opts) {
  opts = opts || {};
  
  if (!opts.include) {
    throw new Error('You must specify a file for browserify to bundle.');
  }
  
  return function (files, metalsmith, done) {

    var included = multimatch(Object.keys(files), opts.include);

    if (included.length === 0) {
      log.error('The pattern specified does not match any files');
      done();
    }

    var src = metalsmith.source();
    var dest = metalsmith.destination();

    var remaining = included.length;

    included.forEach(function (file) {
      var b = browserify();
      var rs = b.add(src + '/' + file).bundle();

      var chunks = [];
      
      rs.on('data', Array.prototype.push.bind(chunks));
      
      rs.on('end', function () {
        files[file].contents = Buffer.concat(chunks);
        
        if (--remaining === 0) {
          done();
        }
      });
    });

  };
}

