(function(
  win, doc, addEventListener, className, replace, script, createElement, async, src, appendChild, clientHeight, LineHeight, tkConfig,
  gaElement, tkElement, fbElement, element) {

  function triggerTypekitAnimation(delay) {
    element[className] = element[className][replace](/\bno-typekit\b/, '');
  }

  setTimeout(triggerTypekitAnimation, '{{typekitTimeout}}');

  GoogleAnalyticsObject = 'ga';
  ga = {
    l: +new Date,
    q: [
      ['create', '{{googleAnalyticsProperty}}', 'auto'],
      ['send', 'pageview']
    ]
  };

  fbElement = doc[createElement](script);
  fbElement[src] = '//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.5&appId={{fbAppId}}';
  fbElement.id = 'facebook-jssdk';
  
  gaElement = doc[createElement](script);
  gaElement[src] = '//google-analytics.com/analytics.js';

  tkElement = doc[createElement](script);
  tkElement[src] = 'https://use.typekit.net/{{ typekitId }}.js';

  gaElement[async] = tkElement[async] = fbElement[async] = tkConfig[async] = 1;

  tkElement.onload = tkElement.onreadystatechange = function() {
    try {
      tkConfig.active = triggerTypekitAnimation;
      /^(c|l.*d$)/.test(tkElement.readyState || 'c') && Typekit.load(tkConfig);
    } catch (e) { }
  };

  // no document.head in IE <9
  element = doc.getElementsByTagName('head')[0];
  element[appendChild](gaElement);
  element[appendChild](tkElement);
  element[appendChild](fbElement);

  element = doc.documentElement;
  element[className] = element[className][replace](/\bno-js\b/, 'js');
  
  if (win._phantom || !doc[addEventListener]) 
    return;
  
  function onWindowResize() {
    var figures = doc.querySelectorAll('.hero img, figure img'),
        i = figures.length,
        img;
    
    while(i--) {
      img = figures[i];
      img.parentElement.style.paddingBottom = 
        LineHeight * (Math.ceil(img[clientHeight] / LineHeight)) - 
        img[clientHeight] + 'px';
    }
  }
  
  win[addEventListener]('resize', onWindowResize);
  setTimeout(onWindowResize, 50);
})(
  this,
  document,
  'addEventListener',
  'className',
  'replace',
  'script',
  'createElement',
  'async',
  'src',
  'appendChild',
  'clientHeight',
  28,
  {}
);