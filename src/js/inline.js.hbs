(function(win, doc, addEventListener, className, replace, clientHeight, LineHeight, tkConfig, element) {

  function triggerTypekitAnimation(delay) {
    element[className] = element[className][replace](/\bno-typekit\b/, '');
  }

  function createScript(src, id, onLoad) {
    var result = doc.createElement('script');
    result.id = id;
    result.src = src;
    result.async = 1;
    result.onload = result.onreadystatechange = onLoad;
    element.appendChild(result);
  }

  setTimeout(triggerTypekitAnimation, '{{typekitTimeout}}');

  GoogleAnalyticsObject = 'ga';
  ga = {
    l: +new Date,
    q: [
      ['create', '{{googleAnalyticsProperty}}', 'auto'],
      ['send', 'pageview']
    ]
  };

  // no document.head in IE <9
  element = doc.getElementsByTagName('head')[0];

  createScript('//google-analytics.com/analytics.js');

  createScript(
    '//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.5&appId={{fbAppId}}',
    'facebook-jssdk'
  );

  createScript(
    'https://use.typekit.net/{{ typekitId }}.js',
    undefined,
    function() {
      try {
        tkConfig.active = triggerTypekitAnimation;
        /^(c|l.*d$)/.test(this.readyState || 'c') && Typekit.load(tkConfig);
      } catch (e) { }
    }
  );

  element = doc.documentElement;
  element[className] = element[className][replace](/\bno-js\b/, 'js');

  if (win._phantom || !doc[addEventListener])
    return;

  function onWindowResize() {
    var figures = doc.querySelectorAll('.hero img, figure img'),
      i = figures.length,
      img;

    while (i--) {
      img = figures[i];
      img.parentElement.style.paddingBottom =
        LineHeight * (Math.ceil(img[clientHeight] / LineHeight)) -
        img[clientHeight] + 'px';
    }
  }

  win[addEventListener]('resize', onWindowResize);
  setTimeout(onWindowResize, 50);
})(
  this,
  document,
  'addEventListener',
  'className',
  'replace',
  'clientHeight',
  28,
  { async: 1 }
);